<!DOCTYPE html>
<html lang="en">

<head>
  <meta charset="UTF-8">
  <title>Flight Results</title>
  <meta name="viewport" content="width=device-width, initial-scale=1">
  <link href="https://cdn.jsdelivr.net/npm/bootstrap@5.3.3/dist/css/bootstrap.min.css" rel="stylesheet">
  <script src="https://cdnjs.cloudflare.com/ajax/libs/gsap/3.12.2/gsap.min.js"></script>
</head>

<body class="bg-light">
  <%- include('partials/header') %>

    <div class="container my-5">
      <h1 class="mb-4 text-center">Flight Search Results</h1>

      <% if (flights.length> 0) { %>
        <div class="row g-4">
          <% flights.forEach(flight=> { %>
            <div class="col-md-6">
              <div class="card shadow-sm border-primary">
                <div class="card-body">

                  <h5 class="card-title text-primary">Price: <%= flight.price.total %> <small class="text-muted">(<%=
                          flight.price.currency %>)</small></h5>

                  <% flight.itineraries.forEach((itinerary, itineraryIndex)=> { %>
                    <h6 class="mt-4">
                      <%= itineraryIndex===0 ? 'Departure Flight' : 'Return Flight' %>
                    </h6>
                    <% itinerary.segments.forEach((segment, segmentIndex)=> {
                      const departureTime = new Date(segment.departure.at);
                      const arrivalTime = new Date(segment.arrival.at);
                      const flightDuration = Math.floor((arrivalTime - departureTime) / (60 * 1000)); // minutes
                      %>
                      <div class="mb-3">
                        <strong>
                          <%= segment.departure.iataCode %>
                        </strong> ➔ <strong>
                          <%= segment.arrival.iataCode %>
                        </strong><br>
                        <small>
                          <%= departureTime.toLocaleString() %> ➔ <%= arrivalTime.toLocaleString() %><br>
                              Flight Time: <%= Math.floor(flightDuration / 60) %>h <%= flightDuration % 60 %>m<br>
                                  Airline:
                                  <% segment.carrierCode && (function() { %>
                                    <img
                                      src="https://content.airhex.com/content/logos/airlines_<%= segment.carrierCode %>_50_50_s.png"
                                      alt="<%= segment.carrierCode %>" style="height:24px;">
                                    (<%= segment.carrierCode %>)
                                      <% })(); %>
                                        Flight Number: <%= segment.carrierCode %>
                                          <%= segment.number %>
                        </small>
                      </div>

                      <%if(segmentIndex < itinerary.segments.length- 1) { const layoverTime=Math.floor((new Date(itinerary.segments[segmentIndex + 1].departure.at)- arrivalTime) / (60 * 1000)); %>
                        <div class="alert alert-warning py-1 px-2">
                          Layover at <strong>
                            <%= segment.arrival.iataCode %>
                          </strong>: <%= Math.floor(layoverTime / 60) %>h <%= layoverTime % 60 %>m
                        </div>
                        <% } %>

                          <% }) %>
                            <% }) %>

                              <div class="mt-4">
                                <strong>Seats left:</strong>
                                <%= flight.numberOfBookableSeats %>
                              </div>

                              <form action="/saveFlight" method="POST">
                                <input type="hidden" name="origin"
                                  value="<%= flight.itineraries[0].segments[0].departure.iataCode %>">
                                <input type="hidden" name="destination"
                                  value="<%= flight.itineraries[0].segments[flight.itineraries[0].segments.length - 1].arrival.iataCode %>">
                                <input type="hidden" name="date"
                                  value="<%= flight.itineraries[0].segments[0].departure.at %>">
                                <input type="hidden" name="returnDate"
                                  value="<%= typeof flight.itineraries[1] !== 'undefined' ? flight.itineraries[1].segments[0].departure.at : '' %>">
                                <input type="hidden" name="travelClass"
                                  value="<%= flight.travelerPricings[0].fareDetailsBySegment[0].cabin %>">
                                <input type="hidden" name="price" value="<%= flight.price.total %>">
                                <input type="hidden" name="currency" value="<%= flight.price.currency %>">
                                <input type="hidden" name="flightNumber"
                                  value="<%= flight.itineraries[0].segments[0].carrierCode %><%= flight.itineraries[0].segments[0].number%>">
                                <button type="submit" class="btn btn-outline-primary w-100 mt-3">Save Flight</button>
                              </form>

                </div>
              </div>
            </div>
            <% }) %>
        </div>
        <% } else { %>
          <div class="alert alert-warning text-center" role="alert">
            No flights found.
          </div>
          <% } %>

            <div class="text-center mt-5">
              <a href="/" class="btn btn-secondary">Search Again</a>
            </div>

    </div>
    <%- include('partials/footer') %>
      <script src="https://cdn.jsdelivr.net/npm/bootstrap@5.3.3/dist/js/bootstrap.bundle.min.js"></script>
      <script>
        document.addEventListener('DOMContentLoaded', () => {
          const saveButtons = document.querySelectorAll('form[action="/saveFlight"] button');
          saveButtons.forEach(button => {
            button.addEventListener('click', (e) => {
              // Optional: prevent multiple clicks
              button.disabled = true;
              // Animate button with a quick scale bounce
              gsap.fromTo(button,
                { scale: 1 },
                { scale: 1.1, duration: 0.15, yoyo: true, repeat: 1, ease: "power1.inOut" }
              );
              // Add loading text or spinner (optional)
              button.innerHTML = `<span class="spinner-border spinner-border-sm me-2"></span>Saving...`;
              // Allow the form to submit after a short delay so the animation plays
              setTimeout(() => {
                button.closest('form').submit();
              }, 300);
              e.preventDefault(); // prevent immediate form submission
            });
          });
        });
      </script>
</body>

</html>